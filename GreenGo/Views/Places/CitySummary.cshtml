@model List<GreenGo.Models.Place>

@{
    ViewBag.Title = $"Explore {ViewBag.CityName} City - GreenGo";

    // Separate the model list into Museum and Park groups
    var museums = Model.Where(p => p.Type.Equals("Museum", StringComparison.OrdinalIgnoreCase)).ToList();
    var parks = Model.Where(p => p.Type.Equals("Park", StringComparison.OrdinalIgnoreCase)).ToList();

    // Set a default description for the hero section
    string cityDescription = "Explore local museums and public parks that reflect the city's heritage and everyday life.";
    if (ViewBag.CityName == "Manila")
    {
        cityDescription = "Manila City, the vibrant capital of the Philippines, is a bustling metropolis that blends rich history with modern urban life. Explore its unique mix of tradition, resilience, and warmth.";
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <style>
        /* --- STYLES COPIED AND CLEANED FROM YOUR TEMPLATE --- */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif;
            color: #333;
        }

        /* Hero Section */
        .hero {
            position: relative;
            height: 300px;
            background-size: cover;
            background-position: center;
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding: 0 5%;
            color: white;
            /* Placeholder Background Image - needs actual path in your project */
            background-image: url('@Url.Content("~/Content/images/city-hero/default.jpg")');
        }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.4));
            z-index: 1;
        }

        .hero h1, .hero p {
            position: relative;
            z-index: 2;
        }

        .hero h1 {
            font-size: 56px;
            font-weight: 700;
            margin-bottom: 20px;
        }

        .hero p {
            max-width: 900px;
            font-size: 18px;
            line-height: 1.7;
            opacity: 0.95;
            text-align: justify;
        }

        /* Main Content */
        .content {
            padding: 50px 5%;
            background: #f8f9fa;
        }

        .section-title {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .category-title {
            font-size: 22px;
            font-weight: 700;
            margin: 40px 0 25px;
        }

        /* Cards Grid */
        .cards-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-bottom: 20px;
        }

        .card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            cursor: pointer;
            text-decoration: none !important; /* Ensure link style is removed */
            color: inherit;
        }

        .card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.12);
        }

        .card-image-placeholder, .card-image-img {
            width: 100%;
            height: 180px;
            object-fit: cover;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 60px;
            color: white;
        }

        .card-image-placeholder.museum {
            background: linear-gradient(135deg,#667eea 0%, #764ba2 100%);
        }

        .card-image-placeholder.park {
            background: linear-gradient(135deg,#56ab2f 0%, #a8e063 100%);
        }

        .card-body {
            padding: 15px;
        }

        .card-location {
            font-size: 12px;
            color: #666;
            margin-bottom: 5px;
        }

        .card-name {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 8px;
            color: #1a1a1a;
            line-height: 1.3;
        }

        .card-rating {
            display: flex;
            align-items: center;
            gap: 4px;
            font-size: 13px;
            margin-bottom: 8px;
        }

        .rating-stars {
            color: #ffa000;
        }

        .rating-count {
            color: #999;
        }

        .card-price {
            font-size: 14px;
            font-weight: 600;
            color: #1a1a1a;
        }

        .price-free {
            color: #5a8a3a;
        }

        .footer {
            background: #3d4f2f;
            color: white;
            text-align: center;
            padding: 20px;
            font-size: 14px;
        }
        /* --- END CUSTOM CSS --- */
    </style>
</head>
<body>
    <section class="hero" style="background-image: url('@Url.Content("~/Content/images/city-hero/" + ViewBag.CityName + ".jpg")');">
        <h1>@ViewBag.CityName City</h1>
        <p>@cityDescription</p>
    </section>

    <main class="content">
        <h2 class="section-title">Explore all places in @ViewBag.CityName City</h2>

        <!-- MUSEUM SECTION -->
        @if (museums.Any())
        {
            <h3 class="category-title">Museums</h3>

            <div class="cards-grid">
                @foreach (var place in museums)
                {
                    <a href="@Url.Action("Details", "Places", new { city = place.City, type = place.Type, id = place.Id })" class="card">
                        @if (string.IsNullOrEmpty(place.ImageUrl))
                        {
                            <div class="card-image-placeholder museum">🏛️</div>
                        }
                        else
                        {
                            <img src="@Url.Content(place.ImageUrl)" alt="@place.Name" class="card-image-img">
                        }

                        <div class="card-body">
                            <p class="card-location">@place.City</p>
                            <h4 class="card-name">@place.Name</h4>
                            <div class="card-rating"><span class="rating-stars">★★★★☆</span><span class="rating-value">—</span><span class="rating-count">(local)</span></div>
                            <!-- FIXED: Null check added -->
                            <p class="card-price @(place.PriceAdult != null && place.PriceAdult.ToLower().Contains("free") ? "price-free" : "")">@(place.PriceAdult ?? "Price N/A")</p>
                        </div>
                    </a>
                }
            </div>
        }

        <!-- PARKS SECTION -->
        @if (parks.Any())
        {
            <h3 class="category-title">Parks</h3>

            <div class="cards-grid">
                @foreach (var place in parks)
                {
                    <a href="@Url.Action("Details", "Places", new { city = place.City, type = place.Type, id = place.Id })" class="card">
                        @if (string.IsNullOrEmpty(place.ImageUrl))
                        {
                            <div class="card-image-placeholder park">🌳</div>
                        }
                        else
                        {
                            <img src="@Url.Content(place.ImageUrl)" alt="@place.Name" class="card-image-img">
                        }

                        <div class="card-body">
                            <p class="card-location">@place.City</p>
                            <h4 class="card-name">@place.Name</h4>
                            <div class="card-rating"><span class="rating-stars">★★★★☆</span><span class="rating-value">—</span><span class="rating-count">(local)</span></div>
                            <!-- FIXED: Null check added -->
                            <p class="card-price @(place.PriceAdult != null && place.PriceAdult.ToLower().Contains("free") ? "price-free" : "")">@(place.PriceAdult ?? "Price N/A")</p>
                        </div>
                    </a>
                }
            </div>
        }
    </main>

    <footer class="footer">© 2025 GreenGo NCR - Eco Travel Hub</footer>
</body>
</html>
