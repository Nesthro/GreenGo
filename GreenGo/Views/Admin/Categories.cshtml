@{
    ViewBag.Title = "Admin Categories";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="top-row">   
    <div class="page-header">
        <h2>Categories</h2>
        <button class="btn-add" onclick="openAddModal()">
            <i class="fa-solid fa-plus"></i> Add Category
        </button>
    </div>
    <div class="top-right">
        <div class="searchbar">
            <i class="fa-solid fa-magnifying-glass"></i>
            <input id="mainSearch" placeholder="Search" onkeyup="filterCategories()" />
        </div>
    </div>
</div>

<!-- STATS CARDS -->
<div class="stats-cards">
    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">Categories Created</div>
            <div class="stat-value" id="totalCategories">32</div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-folder-plus"></i>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">Active Categories</div>
            <div class="stat-value" id="activeCategories">25</div>
            <div class="stat-trend up">
                <i class="fa-solid fa-arrow-up"></i>
                16% this month
            </div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-check-circle"></i>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">Inactive Categories</div>
            <div class="stat-value" id="inactiveCategories">7</div>
            <div class="stat-trend down">
                <i class="fa-solid fa-arrow-down"></i>
                1% this month
            </div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-desktop"></i>
        </div>
    </div>
</div>

<!-- CATEGORIES TABLE -->
<div class="table-container">
    <div class="table-header">
        <div class="table-title">
            <h3>Categories</h3>
            <p class="table-subtitle">Category List</p>
        </div>
        <div class="table-filters">
            <div class="searchbar-inline">
                <i class="fa-solid fa-magnifying-glass"></i>
                <input id="tableSearch" placeholder="Search" onkeyup="filterCategories()" />
            </div>
            <div class="sort-dropdown">
                <label>Short by:</label>
                <select id="sortSelect" onchange="sortCategories()">
                    <option value="newest">Newest</option>
                    <option value="oldest">Oldest</option>
                    <option value="name">Name (A-Z)</option>
                    <option value="destinations">Destinations (High-Low)</option>
                </select>
            </div>
        </div>
    </div>

    <table class="data-table">
        <thead>
            <tr>
                <th>Category Name</th>
                <th>Destinations</th>
                <th>Date Created</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="categoryTableBody">
            <!-- Populated by JavaScript -->
        </tbody>
    </table>

    <div class="pagination">
        <div class="pagination-info" id="paginationInfo">Showing data 1 to 8 of 256K entries</div>
        <div class="pagination-controls" id="paginationControls">
            <!-- Pagination buttons generated by JavaScript -->
        </div>
    </div>
</div>

<!-- ADD CATEGORY MODAL -->
<div id="addModal" class="modal">
    <div class="modal-content form-modal">
        <h2>Add Category</h2>
        <form id="addCategoryForm" onsubmit="return saveNewCategory(event)">
            <div class="form-group">
                <label>Category</label>
                <select id="addCategoryName" required>
                    <option value="">Museum</option>
                    <option value="Museum">Museum</option>
                    <option value="Parks">Parks</option>
                    <option value="Beach">Beach</option>
                    <option value="Historical">Historical</option>
                    <option value="Nature">Nature</option>
                    <option value="Adventure">Adventure</option>
                </select>
            </div>

            <div class="form-group">
                <label>Description</label>
                <textarea id="addDescription" placeholder="Short Description" rows="3"></textarea>
            </div>

            <div class="form-group">
                <label>Status</label>
                <select id="addStatus" required>
                    <option value="">Active</option>
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                </select>
            </div>

            <div class="modal-actions">
                <button type="submit" class="btn-save">Save</button>
                <button type="button" class="btn-cancel-modal" onclick="closeModal('addModal')">Cancel</button>
            </div>
        </form>
    </div>
</div>

<!-- EDIT CATEGORY MODAL -->
<div id="editModal" class="modal">
    <div class="modal-content form-modal">
        <h2>Edit Category</h2>
        <form id="editCategoryForm" onsubmit="return updateCategory(event)">
            <div class="form-group">
                <label>Category</label>
                <select id="editCategoryName" required>
                    <option value="Museum">Museum</option>
                    <option value="Parks">Parks</option>
                    <option value="Beach">Beach</option>
                    <option value="Historical">Historical</option>
                    <option value="Nature">Nature</option>
                    <option value="Adventure">Adventure</option>
                </select>
            </div>

            <div class="form-group">
                <label>Description</label>
                <textarea id="editDescription" placeholder="Lorem ipsum dolor sit amet, consectetur adipiscin." rows="3"></textarea>
            </div>

            <div class="form-group">
                <label>Status</label>
                <select id="editStatus" required>
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                </select>
            </div>

            <div class="modal-actions">
                <button type="submit" class="btn-save">Save</button>
                <button type="button" class="btn-cancel-modal" onclick="closeModal('editModal')">Cancel</button>
            </div>
        </form>
    </div>
</div>

<!-- DELETE CONFIRMATION MODAL -->
<div id="deleteModal" class="modal">
    <div class="modal-content delete-modal">
        <div class="delete-icon">
            <i class="fa-solid fa-trash-can"></i>
        </div>
        <h2>Delete Category</h2>
        <p>Are you sure you want to delete this category?</p>
        <div class="modal-actions">
            <button type="button" class="btn-cancel-modal" onclick="closeModal('deleteModal')">No, Cancel</button>
            <button type="button" class="btn-delete" onclick="confirmDelete()">Delete</button>
        </div>
    </div>
</div>

<script>
    // ============================================
    // SAMPLE CATEGORY DATA
    // ============================================
    const categories = [
        { id: 1, name: 'Museum', destinations: 28, dateCreated: '12-01-2024', status: 'Active', description: 'Museums and cultural exhibits' },
        { id: 2, name: 'Parks', destinations: 31, dateCreated: '12-01-2024', status: 'Inactive', description: 'Public parks and recreational areas' },
        { id: 3, name: 'Museum', destinations: 21, dateCreated: '12-01-2024', status: 'Inactive', description: 'Art and history museums' },
        { id: 4, name: 'Museum', destinations: 63, dateCreated: '12-01-2024', status: 'Active', description: 'Interactive museum experiences' },
        { id: 5, name: 'Parks', destinations: 11, dateCreated: '12-01-2024', status: 'Active', description: 'Nature parks and gardens' },
        { id: 6, name: 'Parks', destinations: 21, dateCreated: '12-01-2024', status: 'Active', description: 'City parks and playgrounds' },
        { id: 7, name: 'Museum', destinations: 32, dateCreated: '12-01-2024', status: 'Active', description: 'Science and technology museums' },
        { id: 8, name: 'Parks', destinations: 12, dateCreated: '12-01-2024', status: 'Inactive', description: 'National parks and reserves' },
        { id: 9, name: 'Beach', destinations: 45, dateCreated: '12-01-2024', status: 'Active', description: 'Beach resorts and coastal areas' },
        { id: 10, name: 'Historical', destinations: 18, dateCreated: '12-01-2024', status: 'Active', description: 'Historical landmarks and sites' },
        { id: 11, name: 'Nature', destinations: 27, dateCreated: '12-01-2024', status: 'Active', description: 'Natural wonders and trails' },
        { id: 12, name: 'Adventure', destinations: 15, dateCreated: '12-01-2024', status: 'Inactive', description: 'Adventure sports and activities' }
    ];

    // Generate more sample data (up to 100)
    for (let i = 13; i <= 100; i++) {
        const categoryTypes = ['Museum', 'Parks', 'Beach', 'Historical', 'Nature', 'Adventure'];
        const statuses = ['Active', 'Inactive'];
        const randomCategory = categoryTypes[Math.floor(Math.random() * categoryTypes.length)];
        const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];

        categories.push({
            id: i,
            name: randomCategory,
            destinations: Math.floor(Math.random() * 70) + 10,
            dateCreated: '12-01-2024',
            status: randomStatus,
            description: `Description for ${randomCategory} category ${i}`
        });
    }

    // ============================================
    // GLOBAL VARIABLES
    // ============================================
    let currentPage = 1;
    const itemsPerPage = 8;
    let filteredCategories = [...categories];
    let selectedCategoryId = null;

    // ============================================
    // DISPLAY CATEGORIES TABLE
    // ============================================
    function displayCategories() {
        const tbody = document.getElementById('categoryTableBody');
        tbody.innerHTML = '';

        const startIndex = (currentPage - 1) * itemsPerPage;
        const endIndex = startIndex + itemsPerPage;
        const pageData = filteredCategories.slice(startIndex, endIndex);

        pageData.forEach(category => {
            const statusClass = category.status.toLowerCase();
            const row = `
                <tr>
                    <td><div class="category-name">${category.name}</div></td>
                    <td>${category.destinations}</td>
                    <td>${category.dateCreated}</td>
                    <td><span class="status-badge status-${statusClass}">${category.status}</span></td>
                    <td>
                        <div class="action-buttons-inline">
                            <button class="btn-edit" onclick="openEditModal(${category.id})">Edit</button>
                            <button class="btn-delete-inline" onclick="openDeleteModal(${category.id})">Delete</button>
                        </div>
                    </td>
                </tr>
            `;
            tbody.innerHTML += row;
        });

        updateStats();
        updatePaginationInfo();
        createPaginationButtons();
    }

    // ============================================
    // UPDATE STATISTICS
    // ============================================
    function updateStats() {
        const total = categories.length;
        const active = categories.filter(c => c.status === 'Active').length;
        const inactive = categories.filter(c => c.status === 'Inactive').length;

        document.getElementById('totalCategories').textContent = total;
        document.getElementById('activeCategories').textContent = active;
        document.getElementById('inactiveCategories').textContent = inactive;
    }

    // ============================================
    // FILTER CATEGORIES (SEARCH)
    // ============================================
    function filterCategories() {
        const searchText = document.getElementById('tableSearch').value.toLowerCase();

        filteredCategories = categories.filter(category => {
            return category.name.toLowerCase().includes(searchText) ||
                category.destinations.toString().includes(searchText) ||
                category.dateCreated.includes(searchText) ||
                category.status.toLowerCase().includes(searchText);
        });

        currentPage = 1;
        displayCategories();
    }

    // ============================================
    // SORT CATEGORIES
    // ============================================
    function sortCategories() {
        const sortBy = document.getElementById('sortSelect').value;

        switch (sortBy) {
            case 'newest':
                filteredCategories.sort((a, b) => b.id - a.id);
                break;
            case 'oldest':
                filteredCategories.sort((a, b) => a.id - b.id);
                break;
            case 'name':
                filteredCategories.sort((a, b) => a.name.localeCompare(b.name));
                break;
            case 'destinations':
                filteredCategories.sort((a, b) => b.destinations - a.destinations);
                break;
        }

        displayCategories();
    }

    // ============================================
    // PAGINATION
    // ============================================
    function updatePaginationInfo() {
        const total = filteredCategories.length;
        const start = total > 0 ? (currentPage - 1) * itemsPerPage + 1 : 0;
        const end = Math.min(currentPage * itemsPerPage, total);

        document.getElementById('paginationInfo').textContent =
            `Showing data ${start} to ${end} of ${total} entries`;
    }

    function createPaginationButtons() {
        const totalPages = Math.ceil(filteredCategories.length / itemsPerPage);
        const controls = document.getElementById('paginationControls');
        controls.innerHTML = '';

        // Previous button
        controls.innerHTML += `
            <button class="page-btn" onclick="goToPage(${currentPage - 1})" ${currentPage === 1 ? 'disabled' : ''}>
                <i class="fa-solid fa-chevron-left"></i>
            </button>
        `;

        // Page numbers (show up to 5)
        const startPage = Math.max(1, currentPage - 2);
        const endPage = Math.min(totalPages, startPage + 4);

        for (let i = startPage; i <= endPage; i++) {
            controls.innerHTML += `
                <button class="page-btn ${i === currentPage ? 'active' : ''}" onclick="goToPage(${i})">${i}</button>
            `;
        }

        if (endPage < totalPages) {
            controls.innerHTML += '<span>...</span>';
            controls.innerHTML += `<button class="page-btn" onclick="goToPage(${totalPages})">${totalPages}</button>`;
        }

        // Next button
        controls.innerHTML += `
            <button class="page-btn" onclick="goToPage(${currentPage + 1})" ${currentPage === totalPages ? 'disabled' : ''}>
                <i class="fa-solid fa-chevron-right"></i>
            </button>
        `;
    }

    function goToPage(page) {
        const totalPages = Math.ceil(filteredCategories.length / itemsPerPage);
        if (page >= 1 && page <= totalPages) {
            currentPage = page;
            displayCategories();
        }
    }

    // ============================================
    // MODAL FUNCTIONS
    // ============================================
    function openModal(modalId) {
        document.getElementById(modalId).style.display = 'flex';
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
        if (modalId === 'addModal') {
            document.getElementById('addCategoryForm').reset();
        }
    }

    function openAddModal() {
        openModal('addModal');
    }

    function openEditModal(categoryId) {
        const category = categories.find(c => c.id === categoryId);
        if (!category) return;

        selectedCategoryId = categoryId;
        document.getElementById('editCategoryName').value = category.name;
        document.getElementById('editDescription').value = category.description;
        document.getElementById('editStatus').value = category.status;

        openModal('editModal');
    }

    function openDeleteModal(categoryId) {
        selectedCategoryId = categoryId;
        openModal('deleteModal');
    }

    // ============================================
    // ADD NEW CATEGORY
    // ============================================
    function saveNewCategory(event) {
        event.preventDefault();

        const newCategory = {
            id: categories.length + 1,
            name: document.getElementById('addCategoryName').value,
            destinations: Math.floor(Math.random() * 50) + 10,
            dateCreated: new Date().toLocaleDateString('en-GB', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric'
            }).replace(/\//g, '-'),
            status: document.getElementById('addStatus').value,
            description: document.getElementById('addDescription').value
        };

        categories.unshift(newCategory);
        filteredCategories = [...categories];

        closeModal('addModal');
        displayCategories();
        alert('Category added successfully!');

        return false;
    }

    // ============================================
    // UPDATE CATEGORY
    // ============================================
    function updateCategory(event) {
        event.preventDefault();

        const category = categories.find(c => c.id === selectedCategoryId);
        if (!category) return false;

        category.name = document.getElementById('editCategoryName').value;
        category.description = document.getElementById('editDescription').value;
        category.status = document.getElementById('editStatus').value;

        filteredCategories = [...categories];

        closeModal('editModal');
        displayCategories();
        alert('Category updated successfully!');

        return false;
    }

    // ============================================
    // DELETE CATEGORY
    // ============================================
    function confirmDelete() {
        const index = categories.findIndex(c => c.id === selectedCategoryId);
        if (index !== -1) {
            categories.splice(index, 1);
            filteredCategories = [...categories];

            closeModal('deleteModal');
            displayCategories();
            alert('Category deleted successfully!');
        }
    }

    // Close modal when clicking outside
    window.onclick = function (event) {
        if (event.target.classList.contains('modal')) {
            event.target.style.display = 'none';
        }
    }

    // Initialize page
    document.addEventListener('DOMContentLoaded', function () {
        displayCategories();
    });
</script>

<style>
    /* Top Row */
    .top-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 24px;
    }

    .page-header {
        display: flex;
        align-items: center;
        gap: 16px;
    }

        .page-header h2 {
            font-size: 24px;
            font-weight: 600;
            color: #2A4020;
            margin: 0;
        }

    .btn-add {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 10px 20px;
        background: #8fb91c;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 500;
        transition: all 0.3s;
    }

        .btn-add:hover {
            background: #7a9e18;
            transform: translateY(-1px);
        }

    .searchbar {
        display: flex;
        align-items: center;
        gap: 8px;
        background: #f5f5f5;
        padding: 8px 16px;
        border-radius: 8px;
        min-width: 250px;
    }

        .searchbar i {
            color: #8fb91c;
        }

        .searchbar input {
            border: none;
            background: none;
            outline: none;
            width: 100%;
            font-size: 14px;
        }

    /* Stats Cards */
    .stats-cards {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: #EFF5D2;
        padding: 24px;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        border: 1px solid #e0e0e0;
    }

    .stat-title {
        font-size: 14px;
        color: #666;
        font-weight: 500;
        margin-bottom: 8px;
    }

    .stat-value {
        font-size: 32px;
        font-weight: 700;
        color: #2A4020;
        margin-bottom: 8px;
    }

    .stat-trend {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 12px;
        font-weight: 500;
    }

        .stat-trend.up {
            color: #10b981;
        }

        .stat-trend.down {
            color: #ef4444;
        }

    .stat-icon {
        width: 56px;
        height: 56px;
        background: #c8df8e;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        color: #5a7a1f;
    }

    /* Table Container */
    .table-container {
        background: #f8fae5;
        border-radius: 16px;
        padding: 28px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        border: 1px solid #e8edd5;
    }

    .table-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 24px;
    }

    .table-title h3 {
        font-size: 20px;
        font-weight: 600;
        color: #2A4020;
        margin: 0 0 4px 0;
    }

    .table-subtitle {
        font-size: 14px;
        color: #7a9e18;
        margin: 0;
        font-weight: 500;
    }

    .table-filters {
        display: flex;
        gap: 12px;
        align-items: center;
    }

    .searchbar-inline {
        display: flex;
        align-items: center;
        gap: 8px;
        background: white;
        padding: 8px 14px;
        border-radius: 8px;
        border: 1px solid #e0e0e0;
    }

        .searchbar-inline input {
            border: none;
            background: none;
            outline: none;
            width: 180px;
            font-size: 14px;
        }

    .sort-dropdown {
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .sort-dropdown label {
            font-size: 14px;
            color: #666;
            font-weight: 500;
        }

        .sort-dropdown select {
            padding: 8px 14px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            outline: none;
            cursor: pointer;
            font-size: 14px;
            background: white;
        }

    /* Table */
    .data-table {
        width: 100%;
        border-collapse: collapse;
        background: white;
        border-radius: 12px;
        overflow: hidden;
    }

        .data-table thead {
            background: #eaf7cf;
        }

        .data-table th {
            padding: 14px 16px;
            text-align: left;
            font-size: 14px;
            font-weight: 600;
            color: #5a7a1f;
            border-bottom: 2px solid #d4eaa7;
        }

        .data-table td {
            padding: 16px;
            border-bottom: 1px solid #f0f0f0;
            font-size: 14px;
            color: #333;
        }

        .data-table tbody tr:hover {
            background: #fafcf2;
        }

    .category-name {
        font-weight: 600;
        color: #2A4020;
    }

    /* Status Badges */
    .status-badge {
        padding: 6px 16px;
        border-radius: 20px;
        font-size: 13px;
        font-weight: 500;
        display: inline-block;
    }

    .status-active {
        background: #c3e6cb;
        color: #155724;
    }

    .status-inactive {
        background: #f5c6cb;
        color: #721c24;
    }

    /* Action Buttons */
    .action-buttons-inline {
        display: flex;
        gap: 8px;
    }

    .btn-edit {
        padding: 6px 18px;
        background: #17a2b8;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 500;
        transition: all 0.3s;
    }

        .btn-edit:hover {
            background: #138496;
        }

    .btn-delete-inline {
        padding: 6px 18px;
        background: #f8b3ba;
        color: #721c24;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 500;
        transition: all 0.3s;
    }

        .btn-delete-inline:hover {
            background: #f5909a;
        }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 24px;
    }

    .pagination-info {
        font-size: 14px;
        color: #666;
    }

    .pagination-controls {
        display: flex;
        gap: 6px;
        align-items: center;
    }

    .page-btn {
        padding: 8px 12px;
        border: 1px solid #e0e0e0;
        background: white;
        border-radius: 6px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s;
        min-width: 36px;
    }

        .page-btn:hover:not(:disabled) {
            background: #f5f5f5;
        }

        .page-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .page-btn.active {
            background: #5a7a1f;
            color: white;
            border-color: #5a7a1f;
        }

    /* Modal Styles */
   /* ===== Modal Base Styling ===== */
/* ===== Modal Base Styling ===== */
.modal {
    display: none;
    position: fixed;
    z-index: 999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(3px);
    justify-content: center;
    align-items: center;
    animation: fadeIn 0.3s ease-in-out;
}

/* ===== Delete Modal (Eco Theme) ===== */
.modal-content {
    background-color: #EFF5D2; /* 🌿 Eco-friendly light background */
    margin: auto;
    padding: 30px 40px;
    border-radius: 15px;
    max-width: 420px;
    width: 90%;
    text-align: center;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.25);
    animation: slideIn 0.3s ease-in-out;
}

/* ===== Delete Modal Header Accent ===== */
.delete-modal {
    border-top: 6px solid #3C9A4A; /* Green accent */
}

/* ===== Delete Icon ===== */
.delete-icon {
    background: #E4F1CC; /* soft green background */
    color: #3C9A4A; /* green icon color */
    font-size: 48px;
    padding: 20px;
    border-radius: 50%;
    display: inline-block;
    margin-bottom: 15px;
}

/* ===== Text Styling ===== */
.delete-modal h2 {
    font-size: 24px;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 10px;
}

.delete-modal p {
    color: #555;
    font-size: 16px;
    margin-bottom: 25px;
}

/* ===== Buttons ===== */
.modal-actions {
    display: flex;
    justify-content: center;
    gap: 15px;
}

/* Cancel Button (Consistent across modals) */
.btn-cancel-modal {
    padding: 10px 28px;
    border: 2px solid #bbb;
    background: transparent;
    color: #555;
    font-weight: 500;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-cancel-modal:hover {
    background: #f2f2f2;
    border-color: #999;
}

/* Delete Button (Natural Red Accent) */
.btn-delete {
    padding: 10px 28px;
    background: #C84C3C; /* softened earthy red */
    border: none;
    color: white;
    font-weight: 600;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-delete:hover {
    background: #A83B2E; /* darker red tone for hover */
    transform: scale(1.03);
}

/* ===== Animations ===== */
@@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@@keyframes slideIn {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

/* ===== Responsive Design ===== */
@@media (max-width: 480px) {
    .modal-content {
        padding: 25px 20px;
    }

    .delete-icon {
        font-size: 40px;
        padding: 15px;
    }

    .delete-modal h2 {
        font-size: 20px;
    }

    .delete-modal p {
        font-size: 14px;
    }

    .btn-cancel-modal,
    .btn-delete {
        padding: 8px 18px;
        font-size: 14px;
    }
}

    /* ===== Modal Base Styling (shared) ===== */
.modal {
    display: none;
    position: fixed;
    z-index: 999;
    inset: 0;
    background: rgba(0, 0, 0, 0.45);
    backdrop-filter: blur(3px);
    justify-content: center;
    align-items: center;
    animation: fadeIn 0.3s ease-in-out;
}

/* ===== Edit Modal ===== */
.modal-content.form-modal {
    background: #EFF5D2; /* 🌿 Soft green background */
    padding: 35px 40px;
    border-radius: 15px;
    width: 90%;
    max-width: 500px;
    text-align: left;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.25);
    animation: slideIn 0.3s ease-in-out;
    border-top: 6px solid #3C9A4A; /* Green accent to match eco tone */
}

/* ===== Modal Title ===== */
.form-modal h2 {
    text-align: center;
    font-size: 24px;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 25px;
}

/* ===== Form Fields ===== */
.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    font-weight: 500;
    color: #333;
    margin-bottom: 8px;
    font-size: 15px;
}

.form-group select,
.form-group textarea,
.form-group input {
    width: 100%;
    padding: 10px 12px;
    border: 1.8px solid #ccc;
    border-radius: 8px;
    font-size: 15px;
    color: #333;
    background-color: #fafafa;
    transition: border 0.3s ease, box-shadow 0.3s ease;
}

/* Focus Effects */
.form-group select:focus,
.form-group textarea:focus,
.form-group input:focus {
    border-color: #3C9A4A;
    box-shadow: 0 0 5px rgba(60, 154, 74, 0.4);
    outline: none;
}

/* ===== Textarea ===== */
textarea {
    resize: none;
}

/* ===== Modal Buttons ===== */
.modal-actions {
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    margin-top: 25px;
}

/* Save Button */
.btn-save {
    background: #3C9A4A;
    border: none;
    padding: 10px 26px;
    border-radius: 8px;
    color: #fff;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s ease, transform 0.2s ease;
}

.btn-save:hover {
    background: #31823E;
    transform: scale(1.03);
}

/* Cancel Button (consistent with delete modal) */
.btn-cancel-modal {
    padding: 10px 26px;
    border: 2px solid #bbb;
    background: transparent;
    color: #555;
    font-weight: 500;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-cancel-modal:hover {
    background: #f2f2f2;
    border-color: #999;
}

/* ===== Animations ===== */
@@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@@keyframes slideIn {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

/* ===== Responsive ===== */
@@media (max-width: 480px) {
    .modal-content.form-modal {
        padding: 25px 20px;
    }

    .form-modal h2 {
        font-size: 20px;
    }

    .btn-save,
    .btn-cancel-modal {
        padding: 8px 18px;
        font-size: 14px;
    }
}
