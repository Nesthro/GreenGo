@{
    ViewBag.Title = "Admin Reservations";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="top-row">
    <div class="page-header">
        <h2>Reservations</h2>
    </div>
    <div class="top-right">
        <div class="searchbar">
            <i class="fa-solid fa-magnifying-glass"></i>
            <input id="searchInput" placeholder="Search" onkeyup="filterTable()" />
        </div>
    </div>
</div>

<!-- STATS CARDS -->
<div class="stats-cards">
    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">Total Reservations</div>
            <div class="stat-value">5,423</div>
            <div class="stat-trend up">
                <i class="fa-solid fa-arrow-up"></i>
                18% this month
            </div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-calendar-check"></i>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">On going Reservations</div>
            <div class="stat-value">1,893</div>
            <div class="stat-trend down">
                <i class="fa-solid fa-arrow-down"></i>
                1% this month
            </div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-clock"></i>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">Finished reservation</div>
            <div class="stat-value">189</div>
            <div class="stat-amount">₱2,368</div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-check-circle"></i>
        </div>
    </div>
</div>

<!-- TABLE SECTION -->
<div class="table-container">
    <div class="table-header">
        <div class="table-title">
            <h3>Reservation Records</h3>
            <p class="table-subtitle">Reservation Records within the system</p>
        </div>
        <div class="table-filters">
            <div class="searchbar-inline">
                <i class="fa-solid fa-magnifying-glass"></i>
                <input id="tableSearch" placeholder="Search" onkeyup="filterTable()" />
            </div>
            <div class="sort-dropdown">
                <label>Status:</label>
                <select id="statusSelect" onchange="filterTable()">
                    <option value="all">All</option>
                    <option value="pending">Pending</option>
                    <option value="confirmed">Confirmed</option>
                    <option value="completed">Completed</option>
                    <option value="cancelled">Cancelled</option>
                </select>
            </div>
        </div>
    </div>

    <table class="data-table" id="reservationsTable">
        <thead>
            <tr>
                <th>Customer Name</th>
                <th>Email Address</th>
                <th>Phone Number</th>
                <th>Destination</th>
                <th>Visit Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            <!-- Table rows populated by JavaScript -->
        </tbody>
    </table>

    <div class="pagination">
        <div class="pagination-info" id="paginationInfo">Showing items 1 to 8 of 100 entries</div>
        <div class="pagination-controls" id="paginationControls">
            <!-- Pagination buttons generated by JavaScript -->
        </div>
    </div>
</div>

<!-- RESERVATION DETAILS MODAL -->
<div id="recordsModal" class="modal">
    <div class="modal-content records-modal">
        <div class="modal-header">
            <h2>Reservation Records</h2>
        </div>

        <div class="reservation-content">
            <!-- Left Column -->
            <div class="reservation-column">
                <div class="info-section">
                    <h3>Customer Name</h3>
                    <div class="info-value" id="modalCustomerName">Juan Dela Cruz</div>
                </div>
                <div class="info-section">
                    <h3>Email Address</h3>
                    <div class="info-value" id="modalEmail">jane@gmail.com</div>
                </div>
                <div class="info-section">
                    <h3>Destination Type</h3>
                    <div class="info-value" id="modalDestinationType">Museum</div>
                </div>
                <div class="info-section">
                    <h3>Date of Visit</h3>
                    <div class="info-value" id="modalVisitDate">October 20, 2025</div>
                </div>
                <div class="info-section">
                    <h3>Payment Method</h3>
                    <div class="info-value" id="modalPaymentMethod">Cash</div>
                </div>
                <div class="info-section">
                    <h3>Status</h3>
                    <div class="info-value">
                        <span class="status-badge pending" id="modalStatus">Pending</span>
                    </div>
                </div>
            </div>

            <!-- Right Column -->
            <div class="reservation-column">
                <div class="info-section">
                    <h3>Phone Number</h3>
                    <div class="info-value" id="modalPhone">(225) 555-0118</div>
                </div>
                <div class="info-section">
                    <h3>Destination Name</h3>
                    <div class="info-value" id="modalDestinationName">Art in Island</div>
                </div>
                <div class="info-section">
                    <h3>Ticket Type and Number of Tickets</h3>
                    <div class="info-value" id="modalTickets">Adult x2, Student x1</div>
                </div>
                <div class="info-section">
                    <h3>Time of Visit</h3>
                    <div class="info-value" id="modalTime">9:00 AM - 1:00 PM</div>
                </div>
                <div class="info-section">
                    <h3>Total Amount</h3>
                    <div class="info-value amount" id="modalAmount">₱1,250</div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="actions-section">
            <h3>Activity</h3>
            <div class="action-buttons">
                <button type="button" class="btn-accept" onclick="acceptReservation()">Accept</button>
                <button type="button" class="btn-reject" onclick="rejectReservation()">Reject</button>
            </div>
        </div>
    </div>
</div>

<!-- ACCEPT CONFIRMATION MODAL -->
<div id="acceptModal" class="modal">
    <div class="modal-content confirm-modal">
        <h2>Confirm Acceptance</h2>
        <p>Are you sure you want to accept this booking?</p>
        <p class="confirm-subtitle">Once approved, the customer will receive a confirmation notification.</p>
        <div class="modal-actions">
            <button type="button" class="btn-cancel" onclick="closeModal('acceptModal')">Cancel</button>
            <button type="button" class="btn-confirm" onclick="confirmAccept()">Yes, Accept</button>
        </div>
    </div>
</div>

<!-- REJECT CONFIRMATION MODAL -->
<div id="rejectModal" class="modal">
    <div class="modal-content confirm-modal">
        <h2>Confirm Rejection</h2>
        <p>Are you sure you want to reject this booking?</p>
        <p class="confirm-subtitle">The customer will be notified about the cancellation.</p>
        <div class="modal-actions">
            <button type="button" class="btn-cancel" onclick="closeModal('rejectModal')">Cancel</button>
            <button type="button" class="btn-reject-confirm" onclick="confirmReject()">Yes, Reject</button>
        </div>
    </div>
</div>

<script>
    // ============================================
    // SAMPLE DATA - This is where all reservations are stored
    // ============================================
    const sampleReservations = [
        { id: 1, name: 'Juan Dela Cruz', email: 'jane@gmail.com', phone: '(225) 555-0118', destination: 'Art in Island', destinationType: 'Museum', visitDate: 'October 20, 2025', timeSlot: '9:00 AM - 1:00 PM', tickets: 'Adult x2, Student x1', paymentMethod: 'Cash', totalAmount: 1250, status: 'pending' },
        { id: 2, name: 'Maria Garcia', email: 'maria.garcia@gmail.com', phone: '(234) 555-0122', destination: 'National Museum', destinationType: 'Museum', visitDate: 'October 22, 2025', timeSlot: '1:00 PM - 5:00 PM', tickets: 'Adult x3', paymentMethod: 'GCash', totalAmount: 1500, status: 'confirmed' },
        { id: 3, name: 'Jose Reyes', email: 'jose.reyes@gmail.com', phone: '(245) 555-0133', destination: 'Rizal Park', destinationType: 'Park', visitDate: 'October 25, 2025', timeSlot: '9:00 AM - 1:00 PM', tickets: 'Adult x4, Student x2', paymentMethod: 'Credit Card', totalAmount: 2600, status: 'completed' },
        { id: 4, name: 'Ana Santos', email: 'ana.santos@example.com', phone: '(256) 555-0144', destination: 'Intramuros', destinationType: 'Historical', visitDate: 'October 28, 2025', timeSlot: '1:00 PM - 5:00 PM', tickets: 'Adult x1, Student x3', paymentMethod: 'Cash', totalAmount: 1350, status: 'confirmed' },
        { id: 5, name: 'Carlos Mendoza', email: 'carlos.mendoza@example.com', phone: '(267) 555-0155', destination: 'Taal Volcano', destinationType: 'Nature', visitDate: 'October 29, 2025', timeSlot: '9:00 AM - 1:00 PM', tickets: 'Adult x2', paymentMethod: 'Credit Card', totalAmount: 1000, status: 'pending' },
        { id: 6, name: 'Rosa Flores', email: 'rosa.flores@example.com', phone: '(278) 555-0166', destination: 'Manila Ocean Park', destinationType: 'Aquarium', visitDate: 'October 30, 2025', timeSlot: '1:00 PM - 5:00 PM', tickets: 'Adult x2, Student x1', paymentMethod: 'GCash', totalAmount: 1600, status: 'completed' },
        { id: 7, name: 'Ricardo Bautista', email: 'ricardo.bautista@example.com', phone: '(289) 555-0177', destination: 'Fort Santiago', destinationType: 'Historical', visitDate: 'November 1, 2025', timeSlot: '9:00 AM - 1:00 PM', tickets: 'Adult x3', paymentMethod: 'Cash', totalAmount: 1500, status: 'cancelled' },
        { id: 8, name: 'Sofia Gonzales', email: 'sofia.gonzales@example.com', phone: '(290) 555-0188', destination: 'Boracay Beach', destinationType: 'Beach', visitDate: 'November 3, 2025', timeSlot: '1:00 PM - 5:00 PM', tickets: 'Adult x2, Student x2', paymentMethod: 'Credit Card', totalAmount: 2000, status: 'confirmed' },
        { id: 9, name: 'Lorenzo Cruz', email: 'lorenzo.cruz@example.com', phone: '(301) 555-0199', destination: 'National Museum', destinationType: 'Museum', visitDate: 'November 5, 2025', timeSlot: '9:00 AM - 1:00 PM', tickets: 'Adult x1, Student x2', paymentMethod: 'GCash', totalAmount: 1100, status: 'pending' },
        { id: 10, name: 'Isabella Navarro', email: 'isabella.navarro@example.com', phone: '(312) 555-0200', destination: 'Art in Island', destinationType: 'Museum', visitDate: 'November 7, 2025', timeSlot: '1:00 PM - 5:00 PM', tickets: 'Adult x2', paymentMethod: 'Credit Card', totalAmount: 1200, status: 'completed' }
    ];


    // Generate more sample reservations (up to 100)
    function generateSampleData() {
        const names = ['Ana Santos', 'Carlos Mendoza', 'Rosa Flores', 'Ricardo Bautista', 'Sofia Gonzales'];
        const destinations = ['Intramuros', 'Taal Volcano', 'Manila Ocean Park', 'Fort Santiago', 'Boracay Beach'];
        const types = ['Historical', 'Nature', 'Aquarium', 'Beach', 'Museum'];
        const statuses = ['pending', 'confirmed', 'completed', 'cancelled'];

        for (let i = 4; i <= 100; i++) {
            const randomName = names[Math.floor(Math.random() * names.length)];
            const randomDest = destinations[Math.floor(Math.random() * destinations.length)];
            const randomType = types[Math.floor(Math.random() * types.length)];
            const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];

            sampleReservations.push({
                id: i,
                name: randomName + ' ' + i,
                email: randomName.toLowerCase().replace(' ', '.') + '@@gmail.com',
                phone: `(${200 + Math.floor(Math.random() * 100)}) 555-${String(Math.floor(Math.random() * 10000)).padStart(4, '0')}`,
                destination: randomDest,
                destinationType: randomType,
                visitDate: 'October ' + (15 + Math.floor(Math.random() * 15)) + ', 2025',
                timeSlot: '9:00 AM - 1:00 PM',
                tickets: `Adult x${Math.floor(Math.random() * 3) + 1}`,
                paymentMethod: ['Cash', 'GCash', 'Credit Card'][Math.floor(Math.random() * 3)],
                totalAmount: (Math.floor(Math.random() * 5) + 1) * 500,
                status: randomStatus
            });
        }
    }

    generateSampleData();

    // ============================================
    // GLOBAL VARIABLES
    // ============================================
    let currentPage = 1;              // Current page number
    const itemsPerPage = 8;           // How many rows to show per page
    let filteredReservations = [...sampleReservations];  // Filtered list based on search/status
    let selectedReservationId = null; // ID of the reservation being viewed

    // ============================================
    // DISPLAY TABLE - Shows reservations on the page
    // ============================================
    function displayTable() {
        const tableBody = document.getElementById('tableBody');
        tableBody.innerHTML = ''; // Clear existing rows

        // Calculate which items to show (pagination)
        const startIndex = (currentPage - 1) * itemsPerPage;
        const endIndex = startIndex + itemsPerPage;
        const itemsToShow = filteredReservations.slice(startIndex, endIndex);

        // Create a row for each reservation
        itemsToShow.forEach(reservation => {
            const row = `
                <tr>
                    <td><div class="customer-name">${reservation.name}</div></td>
                    <td>${reservation.email}</td>
                    <td>${reservation.phone}</td>
                    <td>${reservation.destination}</td>
                    <td>${reservation.visitDate}</td>
                    <td><span class="status-badge status-${reservation.status}">${capitalize(reservation.status)}</span></td>
                    <td><button class="btn-view" onclick="openReservationModal(${reservation.id})">View</button></td>
                </tr>
            `;
            tableBody.innerHTML += row;
        });

        // Update pagination info
        updatePaginationInfo();
        createPaginationButtons();
    }

    // ============================================
    // FILTER TABLE - Search and filter reservations
    // ============================================
    function filterTable() {
        const searchText = document.getElementById('tableSearch').value.toLowerCase();
        const selectedStatus = document.getElementById('statusSelect').value;

        // Filter reservations based on search and status
        filteredReservations = sampleReservations.filter(reservation => {
            const matchesSearch =
                reservation.name.toLowerCase().includes(searchText) ||
                reservation.email.toLowerCase().includes(searchText) ||
                reservation.phone.includes(searchText) ||
                reservation.destination.toLowerCase().includes(searchText);

            const matchesStatus = selectedStatus === 'all' || reservation.status === selectedStatus;

            return matchesSearch && matchesStatus;
        });

        currentPage = 1; // Reset to first page
        displayTable();
    }

    // ============================================
    // PAGINATION - Page navigation
    // ============================================
    function updatePaginationInfo() {
        const totalItems = filteredReservations.length;
        const startItem = totalItems > 0 ? (currentPage - 1) * itemsPerPage + 1 : 0;
        const endItem = Math.min(currentPage * itemsPerPage, totalItems);

        document.getElementById('paginationInfo').textContent =
            `Showing items ${startItem} to ${endItem} of ${totalItems} entries`;
    }

    function createPaginationButtons() {
        const totalPages = Math.ceil(filteredReservations.length / itemsPerPage);
        const controls = document.getElementById('paginationControls');
        controls.innerHTML = '';

        // Previous button
        controls.innerHTML += `<button class="page-btn" onclick="goToPage(${currentPage - 1})" ${currentPage === 1 ? 'disabled' : ''}>
            <i class="fa-solid fa-chevron-left"></i>
        </button>`;

        // Page number buttons (show 5 at a time)
        const startPage = Math.max(1, currentPage - 2);
        const endPage = Math.min(totalPages, startPage + 4);

        for (let i = startPage; i <= endPage; i++) {
            controls.innerHTML += `<button class="page-btn ${i === currentPage ? 'active' : ''}" onclick="goToPage(${i})">${i}</button>`;
        }

        // Next button
        controls.innerHTML += `<button class="page-btn" onclick="goToPage(${currentPage + 1})" ${currentPage === totalPages ? 'disabled' : ''}>
            <i class="fa-solid fa-chevron-right"></i>
        </button>`;
    }

    function goToPage(pageNumber) {
        const totalPages = Math.ceil(filteredReservations.length / itemsPerPage);
        if (pageNumber >= 1 && pageNumber <= totalPages) {
            currentPage = pageNumber;
            displayTable();
        }
    }

    // ============================================
    // MODAL FUNCTIONS - Show/hide reservation details
    // ============================================
    function openReservationModal(reservationId) {
        const reservation = sampleReservations.find(r => r.id === reservationId);
        if (!reservation) return;

        // Fill in modal with reservation details
        document.getElementById('modalCustomerName').textContent = reservation.name;
        document.getElementById('modalEmail').textContent = reservation.email;
        document.getElementById('modalPhone').textContent = reservation.phone;
        document.getElementById('modalDestinationType').textContent = reservation.destinationType;
        document.getElementById('modalDestinationName').textContent = reservation.destination;
        document.getElementById('modalVisitDate').textContent = reservation.visitDate;
        document.getElementById('modalTime').textContent = reservation.timeSlot;
        document.getElementById('modalTickets').textContent = reservation.tickets;
        document.getElementById('modalPaymentMethod').textContent = reservation.paymentMethod;
        document.getElementById('modalAmount').textContent = `₱${reservation.totalAmount.toLocaleString()}`;

        // Update status badge
        const statusBadge = document.getElementById('modalStatus');
        statusBadge.textContent = capitalize(reservation.status);
        statusBadge.className = `status-badge status-${reservation.status}`;

        selectedReservationId = reservationId;
        openModal('recordsModal');
    }

    function openModal(modalId) {
        document.getElementById(modalId).style.display = 'flex';
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    // ============================================
    // ACCEPT/REJECT FUNCTIONS
    // ============================================
    function acceptReservation() {
        openModal('acceptModal');
    }

    function rejectReservation() {
        openModal('rejectModal');
    }

    function confirmAccept() {
        updateReservationStatus('confirmed');
        closeModal('acceptModal');
        closeModal('recordsModal');
        alert('Reservation accepted successfully!');
    }

    function confirmReject() {
        updateReservationStatus('cancelled');
        closeModal('rejectModal');
        closeModal('recordsModal');
        alert('Reservation rejected successfully!');
    }

    function updateReservationStatus(newStatus) {
        const reservation = sampleReservations.find(r => r.id === selectedReservationId);
        if (reservation) {
            reservation.status = newStatus;
            displayTable(); // Refresh the table
        }
    }

    // ============================================
    // HELPER FUNCTIONS
    // ============================================
    function capitalize(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
        if (event.target.classList.contains('modal')) {
            event.target.style.display = 'none';
        }
    }

    // Initialize the page when it loads
    document.addEventListener('DOMContentLoaded', function() {
        displayTable();
    });
</script>

<style>
    /* Top Row Styles */
    .top-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 24px;
    }

    .page-header h2 {
        font-size: 24px;
        font-weight: 600;
        color: #2A4020;
        margin: 0;
    }

    .searchbar {
        display: flex;
        align-items: center;
        gap: 8px;
        background: #f5f5f5;
        padding: 8px 16px;
        border-radius: 8px;
        min-width: 250px;
    }

    .searchbar i {
        color: #8fb91c;
    }

    .searchbar input {
        border: none;
        background: none;
        outline: none;
        width: 100%;
        font-size: 14px;
    }

    /* Stats Cards */
    .stats-cards {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: #EFF5D2;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        border: 1px solid #e0e0e0;
    }

    .stat-title {
        font-size: 14px;
        color: #666;
        font-weight: 500;
        margin-bottom: 8px;
    }

    .stat-value {
        font-size: 32px;
        font-weight: 700;
        color: #2A4020;
        margin-bottom: 8px;
    }

    .stat-trend {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 12px;
        font-weight: 500;
    }

    .stat-trend.up { color: #10b981; }
    .stat-trend.down { color: #ef4444; }

    .stat-amount {
        font-size: 14px;
        color: #666;
        font-weight: 500;
    }

    .stat-icon {
        width: 48px;
        height: 48px;
        background: #eaf7cf;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        color: #8fb91c;
    }

    /* Table Container */
    .table-container {
        background: white;
        border-radius: 12px;
        padding: 24px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        border: 1px solid #e0e0e0;
    }

    .table-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 20px;
    }

    .table-title h3 {
        font-size: 18px;
        font-weight: 600;
        color: #2A4020;
        margin: 0 0 4px 0;
    }

    .table-subtitle {
        font-size: 14px;
        color: #666;
        margin: 0;
    }

    .table-filters {
        display: flex;
        gap: 12px;
        align-items: center;
    }

    .searchbar-inline {
        display: flex;
        align-items: center;
        gap: 8px;
        background: #f5f5f5;
        padding: 6px 12px;
        border-radius: 6px;
    }

    .searchbar-inline input {
        border: none;
        background: none;
        outline: none;
        width: 180px;
        font-size: 14px;
    }

    .sort-dropdown {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .sort-dropdown label {
        font-size: 14px;
        color: #666;
    }

    .sort-dropdown select {
        padding: 6px 12px;
        border: 1px solid #e0e0e0;
        border-radius: 6px;
        outline: none;
        cursor: pointer;
        font-size: 14px;
    }

    /* Table Styles */
    .data-table {
        width: 100%;
        border-collapse: collapse;
    }

    .data-table thead {
        background: #f9f9f9;
    }

    .data-table th {
        padding: 12px;
        text-align: left;
        font-size: 14px;
        font-weight: 600;
        color: #666;
        border-bottom: 2px solid #e0e0e0;
    }

    .data-table td {
        padding: 16px 12px;
        border-bottom: 1px solid #f0f0f0;
        font-size: 14px;
        color: #333;
    }

    .data-table tbody tr:hover {
        background: #fafafa;
    }

    .customer-name {
        font-weight: 600;
        color: #2A4020;
    }

    /* Status Badges */
    .status-badge {
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
    }

    .status-pending {
        background: #fff3cd;
        color: #856404;
    }

    .status-confirmed {
        background: #d1ecf1;
        color: #0c5460;
    }

    .status-completed {
        background: #d4edda;
        color: #155724;
    }

    .status-cancelled {
        background: #f8d7da;
        color: #721c24;
    }

    /* Buttons */
    .btn-view {
        padding: 6px 16px;
        background: #8fb91c;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 500;
        transition: all 0.3s;
    }

    .btn-view:hover {
        background: #7a9e18;
    }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
    }

    .pagination-info {
        font-size: 14px;
        color: #666;
    }

    .pagination-controls {
        display: flex;
        gap: 6px;
        align-items: center;
    }

    .page-btn {
        padding: 6px 12px;
        border: 1px solid #e0e0e0;
        background: white;
        border-radius: 6px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s;
    }

    .page-btn:hover:not(:disabled) {
        background: #f5f5f5;
    }

    .page-btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .page-btn.active {
        background: #8fb91c;
        color: white;
        border-color: #8fb91c;
    }

    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        align-items: center;
        justify-content: center;
    }

    .records-modal {
        background: white;
        padding: 0;
        border-radius: 16px;
        max-width: 800px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
    }

    .modal-header {
        background: #eaf7cf;
        padding: 24px 32px;
        border-radius: 16px 16px 0 0;
        border-bottom: 2px solid #d4eaa7;
    }

    .modal-header h2 {
        text-align: center;
        color: #2A4020;
        margin: 0;
        font-size: 24px;
        font-weight: 600;
    }

    .reservation-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0;
        padding: 32px;
    }

    .reservation-column {
        padding: 0 16px;
    }

    .reservation-column:first-child {
        border-right: 2px solid #f0f0f0;
    }

    .info-section {
        margin-bottom: 24px;
    }

    .info-section h3 {
        color: #666;
        font-size: 14px;
        font-weight: 600;
        margin: 0 0 8px 0;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .info-value {
        color: #2A4020;
        font-size: 16px;
        font-weight: 500;
        line-height: 1.4;
    }

    .amount {
        font-weight: 700;
        color: #2A4020;
        font-size: 18px;
    }

    .actions-section {
        background: #f9f9f9;
        padding: 24px 32px;
        border-radius: 0 0 16px 16px;
        border-top: 2px solid #e0e0e0;
    }

    .actions-section h3 {
        color: #2A4020;
        font-size: 16px;
        font-weight: 600;
        margin: 0 0 16px 0;
        text-align: center;
    }

    .action-buttons {
        display: flex;
        gap: 16px;
        justify-content: center;
    }

    .btn-accept, .btn-confirm {
        padding: 12px 32px;
        background: #28a745;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        font-size: 15px;
        min-width: 120px;
        transition: all 0.3s;
    }

    .btn-accept:hover, .btn-confirm:hover {
        background: #218838;
    }

    .btn-reject, .btn-reject-confirm {
        padding: 12px 32px;
        background: #dc3545;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        font-size: 15px;
        min-width: 120px;
        transition: all 0.3s;
    }

    .btn-reject:hover, .btn-reject-confirm:hover {
        background: #c82333;
    }

    /* Confirmation Modal */
    .confirm-modal {
        max-width: 500px;
        text-align: center;
        background: white;
        padding: 32px;
        border-radius: 16px;
    }

    .confirm-modal h2 {
        color: #2A4020;
        margin-bottom: 16px;
        font-size: 22px;
    }

    .confirm-modal p {
        color: #666;
        margin: 8px 0;
        font-size: 15px;
    }

    .confirm-subtitle {
        color: #999;
        font-size: 14px;
        margin: 8px 0 20px 0;
    }

    .modal-actions {
        display: flex;
        gap: 12px;
        justify-content: center;
        margin-top: 24px;
    }

    .btn-cancel {
        padding: 10px 24px;
        background: #6c757d;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        font-size: 14px;
        min-width: 100px;
    }

    .btn-cancel:hover {
        background: #5a6268;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .stats-cards {
            grid-template-columns: 1fr;
        }

        .table-header {
            flex-direction: column;
            gap: 16px;
        }

        .table-filters {
            width: 100%;
            justify-content: space-between;
        }

        .reservation-content {
            grid-template-columns: 1fr;
        }

        .reservation-column:first-child {
            border-right: none;
            border-bottom: 2px solid #f0f0f0;
            padding-bottom: 24px;
            margin-bottom: 24px;
        }

        .action-buttons {
            flex-direction: column;
        }

        .btn-accept, .btn-reject {
            width: 100%;
            max-width: 200px;
        }

        .pagination {
            flex-direction: column;
            gap: 16px;
        }

        .modal-actions {
            flex-direction: column;
        }
    }
</style>