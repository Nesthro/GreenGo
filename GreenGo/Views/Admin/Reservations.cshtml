@{
    ViewBag.Title = "Admin Reservations";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="top-row">
    <div class="page-header">
        <h2>Reservations</h2>
    </div>
    <div class="top-right">
        <div class="searchbar">
            <i class="fa-solid fa-magnifying-glass"></i>
            <input id="searchInput" placeholder="Search" onkeyup="filterTable()" />
        </div>
    </div>
</div>

<!-- STATS CARDS - NEW DESIGN -->
<div class="stats-cards">
    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">Total Reservations</div>
            <div class="stat-value">5,423</div>
            <div class="stat-trend up">
                <i class="fa-solid fa-arrow-up"></i>
                18% this month
            </div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-calendar-check"></i>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">On going Reservations</div>
            <div class="stat-value">1,893</div>
            <div class="stat-trend down">
                <i class="fa-solid fa-arrow-down"></i>
                1% this month
            </div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-clock"></i>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-content">
            <div class="stat-title">Finished reservation</div>
            <div class="stat-value">189</div>
            <div class="stat-amount">₱2,368</div>
        </div>
        <div class="stat-icon">
            <i class="fa-solid fa-check-circle"></i>
        </div>
    </div>
</div>

<!-- TABLE SECTION -->
<div class="table-container">
    <div class="table-header">
        <div class="table-title">
            <h3>Reservation Records</h3>
            <p class="table-subtitle">Reservation Records within the system</p>
        </div>
        <div class="table-filters">
            <div class="searchbar-inline">
                <i class="fa-solid fa-magnifying-glass"></i>
                <input id="tableSearch" placeholder="Search" onkeyup="filterTable()" />
            </div>
            <div class="sort-dropdown">
                <label>Status:</label>
                <select id="statusSelect" onchange="filterTable()">
                    <option value="all">All</option>
                    <option value="pending">Pending</option>
                    <option value="confirmed">Confirmed</option>
                    <option value="completed">Completed</option>
                    <option value="cancelled">Cancelled</option>
                </select>
            </div>
        </div>
    </div>

    <table class="data-table" id="reservationsTable">
        <thead>
            <tr>
                <th>Customer Name</th>
                <th>Email Address</th>
                <th>Phone Number</th>
                <th>Destination</th>
                <th>Visit Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            <!-- Table rows will be dynamically populated by JavaScript -->
        </tbody>
    </table>

    <div class="pagination">
        <div class="pagination-info" id="paginationInfo">Showing items 1 to 8 of 100 entries</div>
        <div class="pagination-controls" id="paginationControls">
            <button class="page-btn" onclick="changePage('prev')"><i class="fa-solid fa-chevron-left"></i></button>
            <button class="page-btn active" onclick="changePage(1)">1</button>
            <button class="page-btn" onclick="changePage(2)">2</button>
            <button class="page-btn" onclick="changePage(3)">3</button>
            <button class="page-btn" onclick="changePage(4)">4</button>
            <button class="page-btn" onclick="changePage(5)">5</button>
            <span>...</span>
            <button class="page-btn" onclick="changePage(13)">13</button>
            <button class="page-btn" onclick="changePage('next')"><i class="fa-solid fa-chevron-right"></i></button>
        </div>
    </div>
</div>

<!-- RESERVATION RECORDS MODAL -->
<div id="recordsModal" class="modal">
    <div class="modal-content records-modal">
        <div class="modal-header">
            <h2>Reservation Records</h2>
        </div>

        <div class="reservation-content">
            <!-- Left Column - Customer Information -->
            <div class="reservation-column">
                <div class="info-section">
                    <h3>Customer Name</h3>
                    <div class="info-value" id="modalCustomerName">Juan Dela Cruz</div>
                </div>

                <div class="info-section">
                    <h3>Email Address</h3>
                    <div class="info-value" id="modalEmail">jane@gmail.com</div>
                </div>

                <div class="info-section">
                    <h3>Destination Type</h3>
                    <div class="info-value" id="modalDestinationType">Museum</div>
                </div>

                <div class="info-section">
                    <h3>Date of Visit</h3>
                    <div class="info-value" id="modalVisitDate">October 20, 2025</div>
                </div>

                <div class="info-section">
                    <h3>Payment Method</h3>
                    <div class="info-value" id="modalPaymentMethod">Cash</div>
                </div>

                <div class="info-section">
                    <h3>Status</h3>
                    <div class="info-value">
                        <span class="status-badge pending" id="modalStatus">Pending</span>
                    </div>
                </div>
            </div>

            <!-- Right Column - Reservation Details -->
            <div class="reservation-column">
                <div class="info-section">
                    <h3>Phone Number</h3>
                    <div class="info-value" id="modalPhone">(225) 555-0118</div>
                </div>

                <div class="info-section">
                    <h3>Destination Name</h3>
                    <div class="info-value" id="modalDestinationName">Art in Island</div>
                </div>

                <div class="info-section">
                    <h3>Ticket Type and Number of Tickets</h3>
                    <div class="info-value" id="modalTickets">Adult x2, Student x1</div>
                </div>

                <div class="info-section">
                    <h3>Time of Visit</h3>
                    <div class="info-value" id="modalTime">9:00 AM - 1:00 PM</div>
                </div>

                <div class="info-section">
                    <h3>Total Amount</h3>
                    <div class="info-value amount" id="modalAmount">₱1,250</div>
                </div>
            </div>
        </div>

        <!-- Actions Section -->
        <div class="actions-section">
            <h3>Activity</h3>
            <div class="action-buttons">
                <button type="button" class="btn-accept" onclick="acceptReservation()">Accept</button>
                <button type="button" class="btn-reject" onclick="rejectReservation()">Reject</button>
            </div>
        </div>
    </div>
</div>

<!-- ACCEPT CONFIRMATION MODAL -->
<div id="acceptModal" class="modal">
    <div class="modal-content confirm-modal">
        <h2>Confirm Acceptance</h2>
        <p>Are you sure you want to accept this booking?</p>
        <p class="confirm-subtitle">Once approved, the customer will receive a confirmation notification.</p>
        <div class="modal-actions">
            <button type="button" class="btn-cancel" onclick="closeAcceptModal()">Cancel</button>
            <button type="button" class="btn-confirm" onclick="confirmAccept()">Yes, Accept</button>
        </div>
    </div>
</div>

<!-- REJECT CONFIRMATION MODAL -->
<div id="rejectModal" class="modal">
    <div class="modal-content confirm-modal">
        <h2>Confirm Rejection</h2>
        <p>Are you sure you want to reject this booking?</p>
        <p class="confirm-subtitle">The customer will be notified about the cancellation.</p>
        <div class="modal-actions">
            <button type="button" class="btn-cancel" onclick="closeRejectModal()">Cancel</button>
            <button type="button" class="btn-reject-confirm" onclick="confirmReject()">Yes, Reject</button>
        </div>
    </div>
</div>

<script>
    // Philippine Names and Sample Data
    const philippineFirstNames = [
        'Juan', 'Maria', 'Jose', 'Ana', 'Antonio', 'Carmen', 'Manuel', 'Rosa', 'Francisco', 'Teresa',
        'Ricardo', 'Lourdes', 'Carlos', 'Sofia', 'Ramon', 'Elena', 'Fernando', 'Isabel', 'Eduardo', 'Gabriela',
        'Alberto', 'Amanda', 'Roberto', 'Cecilia', 'Miguel', 'Dolores', 'Rafael', 'Andrea', 'Alfredo', 'Beatriz',
        'Armando', 'Catalina', 'Rodrigo', 'Esperanza', 'Felipe', 'Gloria', 'Gregorio', 'Imelda', 'Hector', 'Josephine'
    ];

    const philippineLastNames = [
        'Dela Cruz', 'Garcia', 'Reyes', 'Ramos', 'Mendoza', 'Santos', 'Flores', 'Gonzales', 'Bautista', 'Villanueva',
        'Fernandez', 'Lopez', 'Torres', 'Rivera', 'Aquino', 'Castillo', 'Cruz', 'Morales', 'Ong', 'Lim',
        'Tan', 'Sy', 'Chua', 'Yu', 'Co', 'Go', 'Lee', 'Wong', 'Chan', 'Lim'
    ];

    const destinations = [
        { name: 'Art in Island', type: 'Museum', location: 'Cubao, Quezon City' },
        { name: 'National Museum', type: 'Museum', location: 'Ermita, Manila' },
        { name: 'Rizal Park', type: 'Park', location: 'Manila' },
        { name: 'Intramuros', type: 'Historical', location: 'Manila' },
        { name: 'Taal Volcano', type: 'Nature', location: 'Batangas' },
        { name: 'Pagsanjan Falls', type: 'Nature', location: 'Laguna' },
        { name: 'Boracay Beach', type: 'Beach', location: 'Aklan' },
        { name: 'Chocolate Hills', type: 'Nature', location: 'Bohol' },
        { name: 'Fort Santiago', type: 'Historical', location: 'Intramuros, Manila' },
        { name: 'Manila Ocean Park', type: 'Aquarium', location: 'Manila' }
    ];

    const paymentMethods = ['Cash', 'GCash', 'PayPal', 'Credit Card', 'Bank Transfer'];
    const statusTypes = ['pending', 'confirmed', 'completed', 'cancelled'];

    // Sample Data for Reservations (100 entries)
    const allReservations = [];

    // Generate sample reservations
    for (let i = 1; i <= 100; i++) {
        const firstName = philippineFirstNames[Math.floor(Math.random() * philippineFirstNames.length)];
        const lastName = philippineLastNames[Math.floor(Math.random() * philippineLastNames.length)];
        const destination = destinations[Math.floor(Math.random() * destinations.length)];
        const paymentMethod = paymentMethods[Math.floor(Math.random() * paymentMethods.length)];
        const status = statusTypes[Math.floor(Math.random() * statusTypes.length)];

        // Generate random date within next 30 days
        const visitDate = new Date();
        visitDate.setDate(visitDate.getDate() + Math.floor(Math.random() * 30));
        const formattedDate = visitDate.toLocaleDateString('en-US', {
            month: 'long',
            day: 'numeric',
            year: 'numeric'
        });

        // Generate random time slot
        const timeSlots = ['9:00 AM - 1:00 PM', '1:00 PM - 5:00 PM', '10:00 AM - 2:00 PM', '2:00 PM - 6:00 PM'];
        const timeSlot = timeSlots[Math.floor(Math.random() * timeSlots.length)];

        // Generate random tickets
        const adultTickets = Math.floor(Math.random() * 4) + 1;
        const studentTickets = Math.floor(Math.random() * 3);
        let ticketInfo = [];
        if (adultTickets > 0) ticketInfo.push('Adult x' + adultTickets);
        if (studentTickets > 0) ticketInfo.push('Student x' + studentTickets);

        // Calculate total amount
        const totalAmount = (adultTickets * 500) + (studentTickets * 300);

        // Create email without template literals
        const email = firstName.toLowerCase() + '.' + lastName.toLowerCase().replace(' ', '') + '@@gmail.com';

        // Create phone number without template literals
        const phonePart1 = Math.floor(200 + Math.random() * 100);
        const phonePart2 = String(Math.floor(1000 + Math.random() * 9000)).substring(1);
        const phone = '(' + phonePart1 + ') 555-' + phonePart2;

        allReservations.push({
            id: i,
            name: firstName + ' ' + lastName,
            email: email,
            phone: phone,
            destination: destination.name,
            destinationType: destination.type,
            location: destination.location,
            visitDate: formattedDate,
            timeSlot: timeSlot,
            tickets: ticketInfo.join(', '),
            paymentMethod: paymentMethod,
            totalAmount: totalAmount,
            status: status,
            adultTickets: adultTickets,
            studentTickets: studentTickets
        });
    }

    // Add specific sample from the reference image
    allReservations[0] = {
        id: 1,
        name: 'Juan Dela Cruz',
        email: 'jane@gmail.com',
        phone: '(225) 555-0118',
        destination: 'Art in Island',
        destinationType: 'Museum',
        location: 'Cubao, Quezon City',
        visitDate: 'October 20, 2025',
        timeSlot: '9:00 AM - 1:00 PM',
        tickets: 'Adult x2, Student x1',
        paymentMethod: 'Cash',
        totalAmount: 1250,
        status: 'pending',
        adultTickets: 2,
        studentTickets: 1
    };

    // Pagination settings
    let currentPage = 1;
    const itemsPerPage = 8;
    const totalPages = Math.ceil(allReservations.length / itemsPerPage);
    let filteredData = [...allReservations];
    let currentReservationId = null;

    // Initialize page
    function initPage() {
        renderTable();
        renderPagination();
    }

    // Render table with current page data
    function renderTable() {
        const start = (currentPage - 1) * itemsPerPage;
        const end = start + itemsPerPage;
        const pageData = filteredData.slice(start, end);

        const tbody = document.getElementById('tableBody');
        tbody.innerHTML = '';

        pageData.forEach(function(reservation, index) {
            const statusClass = 'status-' + reservation.status;
            const statusText = reservation.status.charAt(0).toUpperCase() + reservation.status.slice(1);

            const row = '<tr>' +
                '<td><div class="customer-name">' + reservation.name + '</div></td>' +
                '<td>' + reservation.email + '</td>' +
                '<td>' + reservation.phone + '</td>' +
                '<td>' + reservation.destination + '</td>' +
                '<td>' + reservation.visitDate + '</td>' +
                '<td><span class="status-badge ' + statusClass + '">' + statusText + '</span></td>' +
                '<td>' +
                    '<button class="btn-view" onclick="viewReservation(' + reservation.id + ')">View</button>' +
                '</td>' +
            '</tr>';
            tbody.innerHTML += row;
        });

        // Update pagination info
        const totalItems = filteredData.length;
        const showingStart = totalItems > 0 ? start + 1 : 0;
        const showingEnd = Math.min(end, totalItems);
        document.getElementById('paginationInfo').textContent =
            'Showing items ' + showingStart + ' to ' + showingEnd + ' of ' + totalItems + ' entries';
    }

    // Render pagination controls
    function renderPagination() {
        const totalFilteredPages = Math.ceil(filteredData.length / itemsPerPage);
        const paginationControls = document.getElementById('paginationControls');
        let html = '';

        // Previous button
        html += '<button class="page-btn" onclick="changePage(\'prev\')"' + (currentPage === 1 ? ' disabled' : '') + '>';
        html += '<i class="fa-solid fa-chevron-left"></i>';
        html += '</button>';

        // Page numbers
        const maxVisiblePages = 5;
        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
        let endPage = Math.min(totalFilteredPages, startPage + maxVisiblePages - 1);

        if (endPage - startPage < maxVisiblePages - 1) {
            startPage = Math.max(1, endPage - maxVisiblePages + 1);
        }

        if (startPage > 1) {
            html += '<button class="page-btn" onclick="changePage(1)">1</button>';
            if (startPage > 2) {
                html += '<span>...</span>';
            }
        }

        for (let i = startPage; i <= endPage; i++) {
            html += '<button class="page-btn ' + (i === currentPage ? 'active' : '') + '" onclick="changePage(' + i + ')">' + i + '</button>';
        }

        if (endPage < totalFilteredPages) {
            if (endPage < totalFilteredPages - 1) {
                html += '<span>...</span>';
            }
            html += '<button class="page-btn" onclick="changePage(' + totalFilteredPages + ')">' + totalFilteredPages + '</button>';
        }

        // Next button
        html += '<button class="page-btn" onclick="changePage(\'next\')"' + (currentPage === totalFilteredPages ? ' disabled' : '') + '>';
        html += '<i class="fa-solid fa-chevron-right"></i>';
        html += '</button>';

        paginationControls.innerHTML = html;
    }

    // Change page
    function changePage(page) {
        const totalFilteredPages = Math.ceil(filteredData.length / itemsPerPage);

        if (page === 'prev') {
            if (currentPage > 1) currentPage--;
        } else if (page === 'next') {
            if (currentPage < totalFilteredPages) currentPage++;
        } else {
            currentPage = page;
        }

        renderTable();
        renderPagination();
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }

    // Filter Table
    function filterTable() {
        const searchInput = document.getElementById('tableSearch');
        const statusSelect = document.getElementById('statusSelect');

        const searchTerm = searchInput.value.toUpperCase();
        const statusFilter = statusSelect.value;

        if (searchTerm === '' && statusFilter === 'all') {
            filteredData = [...allReservations];
        } else {
            filteredData = allReservations.filter(function(reservation) {
                const matchesSearch =
                    reservation.name.toUpperCase().includes(searchTerm) ||
                    reservation.email.toUpperCase().includes(searchTerm) ||
                    reservation.phone.toUpperCase().includes(searchTerm) ||
                    reservation.destination.toUpperCase().includes(searchTerm);

                const matchesStatus = statusFilter === 'all' || reservation.status === statusFilter;

                return matchesSearch && matchesStatus;
            });
        }

        currentPage = 1;
        renderTable();
        renderPagination();
    }

    // View Reservation Modal
    function viewReservation(id) {
        const reservation = allReservations.find(function(r) { return r.id === id; });
        if (reservation) {
            // Update modal content
            document.getElementById('modalCustomerName').textContent = reservation.name;
            document.getElementById('modalEmail').textContent = reservation.email;
            document.getElementById('modalDestinationType').textContent = reservation.destinationType;
            document.getElementById('modalVisitDate').textContent = reservation.visitDate;
            document.getElementById('modalPaymentMethod').textContent = reservation.paymentMethod;
            document.getElementById('modalPhone').textContent = reservation.phone;
            document.getElementById('modalDestinationName').textContent = reservation.destination;
            document.getElementById('modalTickets').textContent = reservation.tickets;
            document.getElementById('modalTime').textContent = reservation.timeSlot;
            document.getElementById('modalAmount').textContent = '₱' + reservation.totalAmount.toLocaleString();

            // Update status badge
            const statusBadge = document.getElementById('modalStatus');
            statusBadge.textContent = reservation.status.charAt(0).toUpperCase() + reservation.status.slice(1);
            statusBadge.className = 'status-badge ' + reservation.status;

            currentReservationId = id;
            document.getElementById('recordsModal').style.display = 'flex';
        }
    }

    function closeRecordsModal() {
        document.getElementById('recordsModal').style.display = 'none';
    }

    function openAcceptModal() {
        document.getElementById('acceptModal').style.display = 'flex';
    }

    function closeAcceptModal() {
        document.getElementById('acceptModal').style.display = 'none';
    }

    function openRejectModal() {
        document.getElementById('rejectModal').style.display = 'flex';
    }

    function closeRejectModal() {
        document.getElementById('rejectModal').style.display = 'none';
    }

    function acceptReservation() {
        openAcceptModal();
    }

    function rejectReservation() {
        openRejectModal();
    }

    function confirmAccept() {
        if (currentReservationId) {
            const reservation = allReservations.find(function(r) { return r.id === currentReservationId; });
            if (reservation) {
                reservation.status = 'confirmed';
                renderTable();
                closeAcceptModal();
                closeRecordsModal();
                alert('Reservation accepted successfully!');
            }
        }
    }

    function confirmReject() {
        if (currentReservationId) {
            const reservation = allReservations.find(function(r) { return r.id === currentReservationId; });
            if (reservation) {
                reservation.status = 'cancelled';
                renderTable();
                closeRejectModal();
                closeRecordsModal();
                alert('Reservation rejected successfully!');
            }
        }
    }

    // Close modal when clicking outside
    window.onclick = function (event) {
        const modals = ['recordsModal', 'acceptModal', 'rejectModal'];
        modals.forEach(function(modalId) {
            const modal = document.getElementById(modalId);
            if (event.target === modal) {
                if (modalId === 'recordsModal') closeRecordsModal();
                if (modalId === 'acceptModal') closeAcceptModal();
                if (modalId === 'rejectModal') closeRejectModal();
            }
        });
    }

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', function() {
        initPage();
    });
</script>

<style>
    /* Top Row Styles */
    .top-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 24px;
    }

    .page-header {
        display: flex;
        align-items: center;
        gap: 12px;
    }

        .page-header h2 {
            font-size: 24px;
            font-weight: 600;
            color: #2A4020;
            margin: 0;
        }

    .top-right {
        display: flex;
        gap: 12px;
    }

    .searchbar {
        display: flex;
        align-items: center;
        gap: 8px;
        background: #f5f5f5;
        padding: 8px 16px;
        border-radius: 8px;
        min-width: 250px;
    }

        .searchbar i {
            color: #8fb91c;
        }

        .searchbar input {
            border: none;
            background: none;
            outline: none;
            width: 100%;
            font-size: 14px;
        }

    /* NEW STATS CARDS DESIGN */
    .stats-cards {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: #EFF5D2;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        border: 1px solid #e0e0e0;
    }

    .stat-content {
        flex: 1;
    }

    .stat-title {
        font-size: 14px;
        color: #666;
        font-weight: 500;
        margin-bottom: 8px;
    }

    .stat-value {
        font-size: 32px;
        font-weight: 700;
        color: #2A4020;
        margin-bottom: 8px;
        line-height: 1;
    }

    .stat-trend {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 12px;
        font-weight: 500;
    }

        .stat-trend.up {
            color: #10b981;
        }

        .stat-trend.down {
            color: #ef4444;
        }

        .stat-trend i {
            font-size: 12px;
        }

    .stat-amount {
        font-size: 14px;
        color: #666;
        font-weight: 500;
    }

    .stat-icon {
        width: 48px;
        height: 48px;
        background: #eaf7cf;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        color: #8fb91c;
    }

    /* Table Container */
    .table-container {
        background: white;
        border-radius: 12px;
        padding: 24px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        border: 1px solid #e0e0e0;
    }

    .table-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 20px;
    }

    .table-title h3 {
        font-size: 18px;
        font-weight: 600;
        color: #2A4020;
        margin: 0 0 4px 0;
    }

    .table-subtitle {
        font-size: 14px;
        color: #666;
        margin: 0;
    }

    .table-filters {
        display: flex;
        gap: 12px;
        align-items: center;
    }

    .searchbar-inline {
        display: flex;
        align-items: center;
        gap: 8px;
        background: #f5f5f5;
        padding: 6px 12px;
        border-radius: 6px;
    }

        .searchbar-inline input {
            border: none;
            background: none;
            outline: none;
            width: 180px;
            font-size: 14px;
        }

    .sort-dropdown {
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .sort-dropdown label {
            font-size: 14px;
            color: #666;
        }

        .sort-dropdown select {
            padding: 6px 12px;
            border: 1px solid #e0e0e0;
            border-radius: 6px;
            outline: none;
            cursor: pointer;
            font-size: 14px;
        }

    .data-table {
        width: 100%;
        border-collapse: collapse;
    }

        .data-table thead {
            background: #f9f9f9;
        }

        .data-table th {
            padding: 12px;
            text-align: left;
            font-size: 14px;
            font-weight: 600;
            color: #666;
            border-bottom: 2px solid #e0e0e0;
        }

        .data-table td {
            padding: 16px 12px;
            border-bottom: 1px solid #f0f0f0;
            font-size: 14px;
            color: #333;
        }

        .data-table tbody tr:hover {
            background: #fafafa;
        }

    .customer-name {
        font-weight: 600;
        color: #2A4020;
    }

    .status-badge {
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
    }

    .status-pending {
        background: #fff3cd;
        color: #856404;
    }

    .status-confirmed {
        background: #d1ecf1;
        color: #0c5460;
    }

    .status-completed {
        background: #d4edda;
        color: #155724;
    }

    .status-cancelled {
        background: #f8d7da;
        color: #721c24;
    }

    .btn-view {
        padding: 6px 16px;
        background: #8fb91c;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 500;
        transition: all 0.3s;
    }

        .btn-view:hover {
            background: #7a9e18;
        }

    .pagination {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
    }

    .pagination-info {
        font-size: 14px;
        color: #666;
    }

    .pagination-controls {
        display: flex;
        gap: 6px;
        align-items: center;
    }

    .page-btn {
        padding: 6px 12px;
        border: 1px solid #e0e0e0;
        background: white;
        border-radius: 6px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s;
    }

        .page-btn:hover:not(:disabled) {
            background: #f5f5f5;
        }

        .page-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .page-btn.active {
            background: #8fb91c;
            color: white;
            border-color: #8fb91c;
        }

    /* MODAL STYLES */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        align-items: center;
        justify-content: center;
    }

    .records-modal {
        background: white;
        padding: 0;
        border-radius: 16px;
        max-width: 800px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
    }

    .modal-header {
        background: #eaf7cf;
        padding: 24px 32px;
        border-radius: 16px 16px 0 0;
        border-bottom: 2px solid #d4eaa7;
    }

        .modal-header h2 {
            text-align: center;
            color: #2A4020;
            margin: 0;
            font-size: 24px;
            font-weight: 600;
        }

    .reservation-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0;
        padding: 32px;
    }

    .reservation-column {
        padding: 0 16px;
    }

        .reservation-column:first-child {
            border-right: 2px solid #f0f0f0;
        }

    .info-section {
        margin-bottom: 24px;
    }

        .info-section h3 {
            color: #666;
            font-size: 14px;
            font-weight: 600;
            margin: 0 0 8px 0;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

    .info-value {
        color: #2A4020;
        font-size: 16px;
        font-weight: 500;
        line-height: 1.4;
    }

    .amount {
        font-weight: 700;
        color: #2A4020;
        font-size: 18px;
    }

    .actions-section {
        background: #f9f9f9;
        padding: 24px 32px;
        border-radius: 0 0 16px 16px;
        border-top: 2px solid #e0e0e0;
    }

        .actions-section h3 {
            color: #2A4020;
            font-size: 16px;
            font-weight: 600;
            margin: 0 0 16px 0;
            text-align: center;
        }

    .action-buttons {
        display: flex;
        gap: 16px;
        justify-content: center;
    }

    .btn-accept, .btn-confirm {
        padding: 12px 32px;
        background: #28a745;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        font-size: 15px;
        min-width: 120px;
        transition: all 0.3s;
    }

        .btn-accept:hover, .btn-confirm:hover {
            background: #218838;
        }

    .btn-reject, .btn-reject-confirm {
        padding: 12px 32px;
        background: #dc3545;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        font-size: 15px;
        min-width: 120px;
        transition: all 0.3s;
    }

        .btn-reject:hover, .btn-reject-confirm:hover {
            background: #c82333;
        }

    /* Confirmation Modal Styles */
    .confirm-modal {
        max-width: 500px;
        text-align: center;
        background: white;
        padding: 32px;
        border-radius: 16px;
    }

        .confirm-modal h2 {
            color: #2A4020;
            margin-bottom: 16px;
            font-size: 22px;
        }

        .confirm-modal p {
            color: #666;
            margin: 8px 0;
            font-size: 15px;
        }

    .confirm-subtitle {
        color: #999;
        font-size: 14px;
        margin: 8px 0 20px 0;
    }

    .modal-actions {
        display: flex;
        gap: 12px;
        justify-content: center;
        margin-top: 24px;
    }

    .btn-cancel {
        padding: 10px 24px;
        background: #6c757d;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        font-size: 14px;
        min-width: 100px;
    }

        .btn-cancel:hover {
            background: #5a6268;
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .stats-cards {
            grid-template-columns: 1fr;
        }

        .table-header {
            flex-direction: column;
            gap: 16px;
        }

        .table-filters {
            width: 100%;
            justify-content: space-between;
        }

        .reservation-content {
            grid-template-columns: 1fr;
            gap: 0;
        }

        .reservation-column:first-child {
            border-right: none;
            border-bottom: 2px solid #f0f0f0;
            padding-bottom: 24px;
            margin-bottom: 24px;
        }

        .action-buttons {
            flex-direction: column;
            align-items: center;
        }

        .btn-accept, .btn-reject {
            width: 100%;
            max-width: 200px;
        }

        .pagination {
            flex-direction: column;
            gap: 16px;
        }

        .modal-actions {
            flex-direction: column;
        }
    }
</style>