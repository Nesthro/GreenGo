@model IEnumerable<GreenGo.Models.Place>
@using GreenGo.Models

@{
    ViewBag.Title = "Top Attractions";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var museumAttractions = new List<Place>();
    var parkAttractions = new List<Place>();

    if (Model != null)
    {
        museumAttractions = Model.Where(p => p.Type == "Museum")
                                 .Take(30)
                                 .ToList();

        parkAttractions = Model.Where(p => p.Type == "Park")
                               .Take(30)
                               .ToList();
    }
}

<style>
    /* --- Main Container --- */
    .attractions-page-container {
        max-width: 1280px;
        margin: 28px auto;
        padding: 12px 60px;
    }

    .section-title {
        font-size: 26px;
        font-weight: 700;
        color: #0a2447;
        margin-bottom: 24px;
        border-bottom: 2px solid #f0f0f0;
        padding-bottom: 12px;
    }

    /* --- Filter Buttons --- */
    .filter-navigation {
        display: flex;
        gap: 12px;
        margin-bottom: 32px;
    }

    .filter-btn {
        padding: 10px 22px;
        font-size: 15px;
        font-weight: 600;
        color: #0a2447;
        background: #f5f5f5;
        border: 1px solid #e0e0e0;
        border-radius: 30px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .filter-btn:hover {
            background: #e9e9e9;
            border-color: #ccc;
        }

        .filter-btn.active {
            background: #576b24;
            color: #ffffff;
            border-color: #576b24;
        }


    /* --- Attractions Grid --- */
    .top-attraction-grid {
        display: grid;
        /* This matches your original Home.cshtml 4-column layout */
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
    }

    /* ---
    START: Card Styles Copied From Home.cshtml
    --- */

    .destination-card {
        border-radius: 12px;
        overflow: hidden;
        cursor: pointer;
        transition: all 0.3s;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        text-decoration: none;
        color: inherit;
        background: #fff;
    }

        .destination-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        }

    .destination-image {
        width: 100%;
        height: 280px; /* This is the key height from your city cards */
        object-fit: cover;
    }

    .destination-info {
        padding: 18px 20px;
        background: white;
    }

        .destination-info h3 {
            font-size: 17px;
            font-weight: 600;
            color: #0a2447;
            margin-bottom: 4px;
        }

        .destination-info p {
            font-size: 13px;
            color: #999;
            margin: 0;
        }

    /* ---
    END: Card Styles Copied From Home.cshtml
    --- */
</style>


<div class="attractions-page-container">

    <h1 class="section-title">Top Attractions</h1>

    <div class="filter-navigation">
        <button class="filter-btn active" id="filter-museums-btn">
            <i class="fas fa-landmark"></i> Museums
        </button>
        <button class="filter-btn" id="filter-parks-btn">
            <i class="fas fa-tree"></i> Parks
        </button>
    </div>

    <div id="museums-grid" class="top-attraction-grid">
        @foreach (var place in museumAttractions)
        {
            <a href="@Url.Action("Details", "Places", new { id = place.Id, city = place.City, type = place.Type })" class="destination-card">
                <img src="@Url.Content(place.ImageUrl)" alt="@place.Name" class="destination-image" />
                <div class="destination-info">
                    <h3>@place.Name</h3>
                    <p>@place.City</p>
                </div>
            </a>
        }
    </div>

    <div id="parks-grid" class="top-attaction-grid" style="display: none;">
        @foreach (var place in parkAttractions)
        {
            <a href="@Url.Action("Details", "Places", new { id = place.Id, city = place.City, type = place.Type })" class="destination-card">
                <img src="@Url.Content(place.ImageUrl)" alt="@place.Name" class="destination-image" />
                <div class="destination-info">
                    <h3>@place.Name</h3>
                    <p>@place.City</p>
                </div>
            </a>
        }
    </div>

</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const museumBtn = document.getElementById("filter-museums-btn");
        const parkBtn = document.getElementById("filter-parks-btn");

        const museumGrid = document.getElementById("museums-grid");
        const parkGrid = document.getElementById("parks-grid");

        museumBtn.addEventListener("click", function () {
            museumBtn.classList.add("active");
            parkBtn.classList.remove("active");
            museumGrid.style.display = "grid";
            parkGrid.style.display = "none";
        });

        parkBtn.addEventListener("click", function () {
            parkBtn.classList.add("active");
            museumBtn.classList.remove("active");
            parkGrid.style.display = "grid";
            museumGrid.style.display = "none";
        });
    });
</script>